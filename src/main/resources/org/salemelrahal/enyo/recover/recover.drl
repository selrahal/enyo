package org.salemelrahal.enyo.recover;

import bothack.actions.Actions;
import bothack.actions.ActionsComplex;
import bothack.bot.IGame;
import bothack.bot.items.IItem;
import bothack.bot.Hunger;
import java.util.Map.Entry;
import org.salemelrahal.enyo.item.ItemInInventory;
import org.salemelrahal.enyo.item.ItemOnTile;
import org.salemelrahal.enyo.state.LowHealth;
import org.salemelrahal.enyo.state.MediumHealth;
import org.salemelrahal.enyo.state.OnElbereth;
import org.salemelrahal.enyo.state.OnEngravableTile;
import bothack.bot.items.BUC;
import org.salemelrahal.enyo.action.Engrave;
import org.salemelrahal.enyo.action.Quaff;
import org.salemelrahal.enyo.action.Wait;
import org.salemelrahal.enyo.enemy.Enemy;

global org.slf4j.Logger logger;

rule "Recover when low health when there are no monsters around"
when
	MediumHealth()
	not Enemy()
then
	insertLogical(new Wait());
end

rule "Drink potion when in trouble"
when
	LowHealth()
	Enemy(!respectsElbereth())
	ItemInInventory($slot : slot, item.name().contains("potion of full healing"), !BUC.CURSED.equals(item.buc()))
then
	insertLogical(new Quaff($slot));
end


rule "Recover when low health in a safe spot"
when
	OnElbereth()
	LowHealth()
	not Enemy(!respectsElbereth())
then
	insertLogical(new Wait());
end

rule "Engrave with wand of fire when in danger"
when
	IGame(canEngrave())
	ItemInInventory($slot : slot, item.name().contains("wand of fire"))
	OnEngravableTile()
	not OnElbereth()
	LowHealth()
	Enemy(respectsElbereth())
	not Enemy(!respectsElbereth())
then
	insertLogical(new Engrave($slot, "Elbereth"));
end


rule "Engrave with finger when in danger"
when
	IGame(canEngrave())
	OnEngravableTile()
	not OnElbereth()
	LowHealth()
	Enemy(respectsElbereth())
	not Enemy(!respectsElbereth())
then
	insertLogical(new Engrave('-', "Elbereth"));
end

