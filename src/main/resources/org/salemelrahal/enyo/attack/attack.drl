package org.salemelrahal.enyo.attack;

import bothack.actions.Actions;
import org.salemelrahal.enyo.action.Attack;
import org.salemelrahal.enyo.action.Wait;
import org.salemelrahal.enyo.action.Throw;
import org.salemelrahal.enyo.action.MoveTowardsEnemy;
import org.salemelrahal.enyo.enemy.Enemy;
import bothack.bot.IGame;
import bothack.bot.Hunger;
import bothack.bot.Direction;
import bothack.bot.monsters.IMonster;
import bothack.bot.Position;
import org.salemelrahal.enyo.util.MapUtil;
import org.salemelrahal.enyo.state.OnElbereth;
import org.salemelrahal.enyo.state.OnEngravableTile;
import org.salemelrahal.enyo.item.ItemInInventory;
import org.salemelrahal.enyo.fact.PathToAdvantageousTile;
import org.salemelrahal.enyo.item.RangedWeapon;

global org.slf4j.Logger logger;

rule "Melee attack adjacent target enemy"
when
	Enemy($monster : target, isMarked(), isAdjacent())
then
	insertLogical(new Attack($monster));
end

rule "Range attack target enemy"
when
	Enemy($monster : target, isRangeMarked())
	RangedWeapon($slot : slot)
then
	insertLogical(new Throw($slot, $monster));
end

rule "Always attack instead of waiting"
when
	Attack()
	wait : Wait()
then
	delete(wait);
end

rule "Always attack instead of moving" //maybe we should take the monster's difficulty into account?
when
	Attack()
	move : MoveTowardsEnemy()
then
	delete(move);
end
